feedback_click:
  styles:
    card:
      - "--mdc-ripple-color": var(--paper-item-icon-active-color)
      - "--mdc-ripple-press-opacity": 0.2

#######################
### ACTION TEMPLATE ###
#######################
action_state_off:
  state:
    - value: "off"
      styles:
        icon:
          - color: var(--disabled-text-color)
        name:
          - color: var(--disabled-text-color)

#######################
### BUTTON TEMPLATE ###
#######################

button_horizontal:
  layout: icon_name
  show_icon: true
  styles:
    card:
      - height: 50px
    name:
      - padding-right: 5px

button_text:
  show_label: false
  show_icon: false
  styles:
    card:
      - height: 60px
    name:
      - font-weight: bold

# TODO: Could be changed
header_button_menu:
  template:
    - feedback_click
  styles:
    card:
      - box-shadow: 1px 5px 8px rgba(0, 0, 0, 0.3)
    name:
      - color: var(--primary-text-color)
      - font-weight: bold
    icon:
      - color: var(--primary-text-color)

###########################
### LABEL & EMPTY CARDS ###
###########################

row_space_10:
  template: no_background
  tap_action:
    action: none
  styles:
    card:
      - height: 10px
      - padding: 0px

no_background:
  styles:
    card:
      - background-color: "rgba(0, 0, 0, 0.0)"
      - box-shadow: none

grey_background:
  styles:
    card:
      - background: var(--primary-background-color)

width_50:
  styles:
    card:
      - width: 50px
#######################
### BUTTON TEMPLATE ###
#######################

# TODO: Can be deleted
program_day_overview_theme:
  icon: "mdi:calendar-blank-outline"
  state:
    - value: "on"
      icon: "mdi:calendar-check"
    - value: "off"
      icon: "mdi:calendar-remove"
  styles:
    card:
      - padding: 4%
      - color: var(--primary-text-color)
      - font-size: 10px
      - text-transform: capitalize
      - border-width: |
          [[[
          if (entity.state != 'on') return '0px';
          return '2px';
          ]]]
      - border-style: double
      - border-color: |
          [[[
            if (entity.state != 'on') return 'var(--paper-item-icon-color)';
            return 'var(--active-color)';
          ]]]
      - box-shadow: 1px 5px 8px rgba(0, 0, 0, 0.3)
    grid:
      - grid-template-areas: '"i onoff" "n n" "start start" "stop stop"'
      - grid-template-columns: 1fr 1fr
      - grid-template-rows: 1fr min-content min-content min-content
    name:
      - font-weight: bold
      - font-size: 16px
      - align-self: middle
      - justify-self: start
      - padding-bottom: 4px
      - padding-right: 5px
    img_cell:
      - justify-content: start
      - align-items: start
      - margin: none
    icon:
      - color: >
          [[[
            if (entity.state != 'on') return 'var(--paper-item-icon-color)';
              return 'var(--active-color)'
          ]]]
      - width: 50%
      - padding-top: 4px
      - margin-top: -10%
      - margin-left: 0%
    custom_fields:
      onoff:
        - align-self: start
        - justify-self: end
        - text-transform: uppercase
        - font-size: 20px
        - font-weight: bold
        - padding-right: 5px
        - color: >
            [[[
              if (entity.state != 'on') return 'var(--paper-item-icon-color)';
                return 'var(--active-color)'
            ]]]
      start:
        - padding-bottom: 2px
        - padding-right: 5px
        - align-self: middle
        - justify-self: start
        - font-size: 12px
      stop:
        - padding-bottom: 2px
        - align-self: middle
        - justify-self: start
        - padding-right: 5px
        - font-size: 12px
  custom_fields:
    onoff: >
      [[[
        return `<ha-icon
          icon="mdi:light"
          style="width: 14px; height: 14px; color: var(--active-color);">
          </ha-icon><span>${entity.state}</span>`
      ]]]
    start: >
      [[[
        return `<ha-icon
          icon="mdi:clock"
          style="width: 14px; height: 14px; color: var(--primary-color);">
          </ha-icon><span> Accensione :&nbsp;&nbsp;<span style="color: var(--text-color-sensor);">${states[ variables.thermostat_period_on ].state}</span></span>`
      ]]]
    stop: >
      [[[
        return `<ha-icon
          icon="mdi:clock"
          style="width: 14px; height: 14px; color: var(--primary-color);">
          </ha-icon><span> Spegnimento :&nbsp;<span style="color: var(--text-color-sensor);">${states[ variables.thermostat_period_off ].state}</span></span>`
      ]]]
  tap_action:
    action: navigate
    navigation_path: >
      [[[
        return '/lovelace-kairoshub/'+ variables.navigation_path
      ]]]

####################
###### HEADER ######
####################

# TODO: Check if can be changed
header_page_text:
  type: "custom:button-card"
  template: no_background
  show_icon: true
  show_label: true
  show_name: true
  show_state: false
  styles:
    card:
      - padding-top: 0px
    grid:
      - grid-template-areas: '"a b" "a c"'
      - grid-template-columns: 60px 1fr
      - grid-template-rows: min-content min-content
    state:
      - font-size: 120%
      - font-weight: bold
      - justify-self: center
    name:
      - justify-self: left
      - font-size: 120%
      - font-weight: bold
      - color: var(--paper-item-icon-active-color)
      - grid-area: b
    label:
      - justify-self: left
      - font-size: 80%
      - grid-area: c
    img_cell:
      - grid-area: a
    icon:
      - width: 42px
      - height: 42px
      - color: var(--ha-card-header-color)
  tap_action:
    action: none

# TODO: Check if can be changed
user_profile_header:
  type: "custom:button-card"
  entity: person.utente
  template: no_background
  show_icon: false
  show_label: true
  show_name: false
  show_state: false
  show_entity_picture: true
  styles:
    card:
      - padding-top: 7px
    grid:
      - grid-template-areas: '"a" "b"'
      - grid-template-columns: 60px
      - grid-template-rows: min-content min-content
    label:
      - font-size: 80%
      - font-weight: bold
      - color: var(--paper-item-icon-active-color)
      - grid-area: b
    img_cell:
      - grid-area: a
    icon:
      - width: 32px
      - height: 32px
  tap_action:
    action: none

icon_state_header:
  type: "custom:button-card"
  template: no_background
  show_icon: true
  show_label: true
  show_name: false
  show_state: false
  show_entity_picture: true
  styles:
    card:
      - padding-top: 7px
    grid:
      - grid-template-areas: '"a" "b" "c"'
      - grid-template-columns: 1fr
      - grid-template-rows: min-content min-content min-content
    label:
      - font-size: 80%
      - font-weight: bold
      - color: "#f4f4f4"
      - grid-area: b
    img_cell:
      - grid-area: a
    state:
      - grid-area: c
      - font-size: 90%
      - font-weight: bold
    icon:
      - width: 32px
      - height: 32px

user_notification_header:
  type: "custom:button-card"
  entity: input_boolean.notification_to_read
  template: no_background
  show_icon: true
  show_label: true
  show_name: false
  show_state: false
  show_entity_picture: true
  extra_styles: |
    @keyframes tilt-shaking {
      5% { transform: rotate(10deg); }
      15% { transform: rotate(-10deg); }
      10%, 20%, 100% { transform: rotate(0deg); }
    }
  state:
    - value: "on"
      styles:
        card:
          - animation: tilt-shaking 5s linear infinite
  entity_picture: |
    [[[
      if (entity.state == 'on' ) return '/local/images/notification.png'  ;
      if (entity.state == 'off' ) return '/local/images/bell.png';
      else return '';
    ]]]
  styles:
    card:
      - padding-top: 10px
    grid:
      - grid-template-areas: '"a"'
      - grid-template-columns: 60px
      - grid-template-rows: min-content min-content
    img_cell:
      - grid-area: a
    icon:
      - width: 32px
      - height: 32px
  tap_action:
    action: navigate
    navigation_path: /lovelace-kairoshub/notification

icon_clima:
  icon: mdi:calendar-remove
  state:
    - value: "on"
      icon: mdi:calendar-check
      styles:
        icon:
          - color: var(--command-state-active-color)

# TODO: Check if can be changed & removed
header_icon_clima:
  name: Programma caldo
  template: icon_state_header
  entity: binary_sensor.heater_auto
  icon: mdi:calendar-remove
  label: "OFF"
  state:
    - value: "on"
      icon: mdi:calendar-check
      label: "ON"
      styles:
        icon:
          - color: var(--command-state-active-color)
  tap_action:
    action: none

# TODO: Check if can be changed & removed
button_hold:
  template: feedback_click
  styles:
    card:
      - box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1)
      - border: solid 1px rgb(0 0 0 / 10%)

####################
# NAVIGATION BUTTONS
####################

# TODO: Could be changed
button_go_to_program:
  type: "custom:button-card"
  template: icon_state_header
  icon: '[[[ return "mdi:numeric-" + variables.progId + "-box-outline"]]]'
  state:
    - value: "on"
      color: var(--command-state-active-color)
    - value: "off"
      color: var(--command-state-color)
  tap_action:
    action: navigate
    navigation_path: '[[[ return "/lovelace-kairoshub/clima-p" + variables.progId]]]'
  styles:
    card:
      - width: 63px
      - background: none
  style: |
    :host {
      align-self: center;
    }

button_go_back:
  type: "custom:button-card"
  template: header_button_menu
  name: Indietro
  tap_action:
    action: navigate
    navigation_path: "[[[window.history.back()]]]"
  styles:
    card:
      - width: 150px
      - background: none
      - box-shadow: none
    name:
      - color: "#f4f4f4"
  style: |
    :host {
      align-self: center;
    }

####################
# CLIMA ############
####################

# TODO: Check if can be changed
clima_tv_detail:
  type: "custom:button-card"
  icon: "mdi:texture-box"
  name: "[[[return states[`input_text.zn${variables.zoneId}`].state;]]]"
  tap_action:
    action: none
  styles:
    card:
      - padding: 5px
      - color: var(--primary-text-color)
      - font-size: 10px
      - text-transform: capitalize
      - box-shadow: 1px 5px 8px rgba(0, 0, 0, 0.3)
      - margin-bottom: 5px
      - margin-right: 3px
      - height: 85px
    grid:
      - grid-template-areas: >
          "i header temp icon1"
          "last_update last_update humidity icon2"
      - grid-template-columns: 30px 2fr 1fr 30px
      - grid-template-rows: 45px 25px
    name:
      - font-weight: bold
      - font-size: 16px
      - align-self: middle
      - justify-self: start
      - padding-bottom: 4px
      - padding-right: 5px
      - padding-top: 5px
      - grid-area: header
    img_cell:
      - justify-content: start
      - align-items: start
      - margin: none
      - grid-area: i
    icon:
      - color: var(--paper-item-icon-color)
      - width: 80%
    custom_fields:
      temp:
        - justify-self: end
        - align-self: middle
      humidity:
        - justify-self: end
        - align-self: middle
      last_update:
        - justify-self: start
        - align-self: middle
  custom_fields:
    temp: >
      [[[
        var zoneTemperature = states[`sensor.tz${variables.zoneId}`].state;
        var tempColor = 'var(--temperature-secondary-color)';
        if (
          (zoneTemperature > states["input_number.temperature_period1"].state
          && states["input_boolean.heater_program1_on"].state ==="on") ||
          (zoneTemperature > states["input_number.temperature_period2"].state
          && states["input_boolean.heater_program2_on"].state ==="on") ||
          (zoneTemperature > states["input_number.temperature_period3"].state
          && states["input_boolean.heater_program3_on"].state ==="on") ||
          (zoneTemperature > states["input_number.temperature_period4"].state
          && states["input_boolean.heater_program4_on"].state ==="on") ||
          zoneTemperature > states['input_number.manual_heating_temp'].state)
            tempColor = 'var(--temperature-primary-color)';
        return `<div style="align-items: center; display: flex;">
          <span style="font-size: 18px; font-weight: 600; color: ${tempColor};">${ zoneTemperature }°C</span>
          <br />
          </div>
        `
      ]]]
    humidity: >
      [[[
        var humidity = states[`sensor.hz${variables.zoneId}`].state;
        if (humidity != "unknown" && humidity != "unavailable")
          return `<div style="align-items: center; display: flex;"><span style="font-size: 18px; font-weight: 600; color: var(--humidity-primary-color);">${ humidity }%</span>
          <br />
          </div>`;
        return "</>";
      ]]]
    last_update: >
      [[[
        var datetime =  states[`sensor.tz${variables.zoneId}`].last_changed.split("T");
        datetime = new Date(datetime).toLocaleString().replace(","," ");
        var lastupdate = datetime.substring(0,datetime.length-3);
        return `<span style="font-size: 12px;">${lastupdate }</span>`
      ]]]
    icon1:
      card:
        type: custom:button-card
        icon: mdi:thermometer
        styles:
          icon:
            - width: 80%
            - color: >
                [[[
                  var zoneTemperature = states[`sensor.tz${variables.zoneId}`].state;
                  if (
                    (zoneTemperature > states["input_number.temperature_period1"].state
                    && states["input_boolean.heater_program1_on"].state ==="on") ||
                    (zoneTemperature > states["input_number.temperature_period2"].state
                    && states["input_boolean.heater_program2_on"].state ==="on") ||
                    (zoneTemperature > states["input_number.temperature_period3"].state
                    && states["input_boolean.heater_program3_on"].state ==="on") ||
                    (zoneTemperature > states["input_number.temperature_period4"].state
                    && states["input_boolean.heater_program4_on"].state ==="on") ||
                    zoneTemperature > states['input_number.manual_heating_temp'].state)
                      return 'var(--temperature-primary-color)';

                  return 'var(--temperature-secondary-color)';
                ]]]
    icon2:
      card:
        type: conditional
        conditions:
          - entity: "[[[return `sensor.hz${variables.zoneId}`]]]"
            state_not: unknown
        card:
          type: custom:button-card
          icon: mdi:water-percent
          styles:
            icon:
              - width: 80%
              - color: var(--humidity-primary-color)

temperature_value:
  icon: "mdi:thermometer"
  show_state: true
  show_icon: false
  show_name: false
  show_label: false
  size: 20%
  state:
    - value: "20.0"
      operator: <=
      color: var(--temperature-secondary-color)
      styles:
        state:
          - color: var(--temperature-secondary-color)
    - value: "24.0"
      operator: <
      color: orange
      styles:
        state:
          - color: orange
    - value: "24.0"
      operator: ">="
      color: var(--temperature-primary-color)
      styles:
        state:
          - color: var(--temperature-primary-color)
  tap_action:
    action: none
  styles:
    state:
      - font-size: 26px
      - font-weight: bold
    icon:
      - size: 20%
    card:
      - box-shadow: none
  style: |
    :host {
      align-self: center;
    }

temperature_ctrl_plus:
  icon: mdi:thermometer-plus
  size: 30%
  styles:
    card:
      - background: none
      - box-shadow: none
      - padding-top: 4px
    icon:
      - color: var(--temperature-primary-color)
      - filter: opacity(0.75)
  tap_action:
    action: call-service
    service: input_number.increment
    service_data:
      entity_id: "[[[ return variables.entity; ]]]"

temperature_ctrl_minus:
  icon: "mdi:thermometer-minus"
  size: 30%
  styles:
    card:
      - align-self: center
      - background: none
      - box-shadow: none
      - padding-top: 4px
    icon:
      - color: var(--temperature-secondary-color)
  tap_action:
    action: call-service
    service: input_number.decrement
    service_data:
      entity_id: "[[[ return variables.entity; ]]]"

# TODO: Check if can be changed
heating_program_ctrl:
  icon: mdi:power
  state:
    - value: "on"
      label: "Acceso"
      color: var(--command-state-active-color)
    - value: "off"
      label: "Spento"
      color: var(--command-state-color)

light_detail:
  icon: mdi:lightbulb
  size: 75%
  name: "[[[return states[`input_text.zn${variables.zoneId}`].state;]]]"
  tap_action:
    action: none
  styles:
    grid:
      - grid-template-areas: '"i n" "i n'
      - grid-template-rows: 30px auto
      - grid-template-columns: 55px 1fr
    card:
      - padding: 5px
      - color: var(--primary-text-color)
      - font-size: 10px
      - text-transform: capitalize
      - box-shadow: 1px 5px 8px rgba(0, 0, 0, 0.3)
      - margin-bottom: 5px
      - margin-right: 3px
      - height: 90px
      - width: 237px
    name:
      - font-weight: bold
      - font-size: 16px
      - align-self: middle
      - justify-self: start
      - padding-bottom: 4px
      - padding-right: 5px
      - padding-top: 5px
    img_cell:
      - justify-content: start
      - margin-left: 10px
      - width: 60px
      - height: 50px
    icon:
      - color: "#000000"
  state:
    - value: "on"
      styles:
        icon:
          - color: >
              [[[
                if (states["input_select.light_type"].state == "color")
                {
                  var light = `light.group_lz${variables.zoneId}`
                  if (states[light].state) {
                    if (states[light].attributes.rgb_color != undefined) {
                    var color = states[light].attributes.rgb_color
                    return "rgb("+color[0]+","+color[1]+","+color[2]+")";
                    }
                  }
                }
                return "#DCA200";
              ]]]

light_program:
  styles:
    grid:
      - grid-template-areas: '"label select days time"'
      - grid-template-columns: 160px 140px 100px 1fr
      - align-items: self-end
    card:
      - height: auto
      - width: 750px
      - padding: 0px
    custom_fields:
      label:
        - margin-top: 30px
      select:
        - margin-bottom: 14px
      days:
        - margin-bottom: 14px
      time:
        - margin-top: 10px
        - margin-left: 30px

scenes_program:
  styles:
    grid:
      - grid-template-areas: '"label select time"'
      - grid-template-columns: 200px 200px 1fr
    card:
      - height: auto
      - width: 750px
      - padding: 0px
    custom_fields:
      label:
        - margin-top: 27px
      select:
        - margin-left: 10px
      time:
        - margin-top: 10px
        - margin-left: 60px

# TODO: Can be removed
program_page_grid:
  styles:
    card:
      - "--mdc-ripple-press-opacity": 0
    grid:
      - grid-template-areas: '"header" "days" "commands"'
      - grid-template-columns: 1fr
      - grid-template-rows: min-content min-content min-content
      - justify-items: center
      - row-gap: 10px
    name:
      - font-weight: bold
      - font-size: 16px
    custom_fields:
      header:
        - justify-self: start
      commands:
        - width: 100%
        - align-self: middle
      days:
        - margin-left: 3px
        - margin-right: 3px
        - "--mdc-ripple-press-opacity": 0.2

# TODO: Check if can be changed
button_grid_settings:
  template: grid_style
  styles:
    grid:
      - grid-template-areas: '"header" "content"'
      - grid-template-columns: auto
      - grid-template-rows: min-content min-content min-content
      - justify-items: center
      - align-items: start
      - column-gap: 0px
      - row-gap: 10px
    custom_fields:
      header:
        - justify-self: start

# TODO: Check if can be changed
assistance_grid:
  template: grid_style
  styles:
    grid:
      - grid-template-areas: '"header header" "system_data assistance" "system_data kairos_info"'
      - grid-template-columns: 1fr 55%
      - grid-template-rows: 50px min-content 145px
      - justify-items: start
      - align-items: start
      - column-gap: 10px
      - row-gap: 10px
      - margin-right: 10px
      - margin-left: 10px
    custom_fields:
      system_data:
        - justify-self: stretch
      assistance:
        - display: grid
        - justify-self: stretch
      kairos_info:
        - text-align: start

assistance_info:
  styles:
    card:
      - color: var(--primary-text-color)
      - text-transform: capitalize
      - padding: 12px 16px 16px
    grid:
      - grid-template-areas: '"i header" "content content"'
      - grid-template-columns: 30px 1fr
      - grid-template-rows: min-content 1fr
    name:
      - place-self: start
      - grid-area: header
      - line-height: 48px
      - font-size: 20px
      - font-weight: 500
      - color: var(--ha-card-header-color)
      - padding-left: 5px
    img_cell:
      - justify-content: start
      - align-items: start
      - margin: none
      - grid-area: i
    icon:
      - color: var(--ha-card-header-color)
      - width: 80%
    content:
      - font-weight: bold
  custom_fields:
    content: >
      [[[
        return `
          <div class="assistance_content" style="text-align: left; font-size: 12px">

            <div>
              <ha-icon icon="mdi:account" style="width: 24px; padding:5px; color: var(--ha-card-header-color);"></ha-icon>
              <label style="font-weight: bold ">Intestatario impianto:</label>
              <span > ${ states[ variables.systemOwner ].state} </span>
            </div>

            <div>
              <ha-icon icon="mdi:identifier" style="width: 24px; padding:5px; color: var(--ha-card-header-color);"></ha-icon>
              <label style="font-weight: bold; ">Identificativo impianto:</label>
              <span > ${ states[ variables.systemCode ].state} </span>
            </div>

            <div>
              <ha-icon icon="mdi:key" style="width: 24px; padding:5px; color: var(--ha-card-header-color);"></ha-icon>
              <label style="font-weight: bold; ">Chiave impianto:</label>
              <span > ${ states[ variables.systemKey ].state} </span>
            </div>
            <br />

            <div>
              <ha-icon icon="mdi:home-assistant" style="width: 24px; padding:5px; color: var(--ha-card-header-color);"></ha-icon>
              <label style="font-weight: bold ">Stato impianto:</label>
              <span > ${ states[ variables.systemState ].state} </span>
            </div>

            <div>
              <ha-icon icon="mdi:cellphone-arrow-down" style="width: 24px; padding:5px; color: var(--ha-card-header-color);"></ha-icon>
              <label style="font-weight: bold ">Versione software:</label>
              <span > ${ states[ variables.kairoshubSwVersion ].state} </span>
            </div>

          </div>
        `
      ]]]

# TODO: Check if can be changed
grid_style:
  styles:
    card:
      - background: none
      - padding-top: 15px
      - "--mdc-ripple-press-opacity": 0

entities_grid:
  template: grid_style
  styles:
    grid:
      - grid-template-areas: '"header" "entities" "commandbar'
      - grid-template-columns: auto
      - grid-template-row: auto
      - align-items: start
      - column-gap: 0px
      - row-gap: 10px
    custom_fields:
      header:
        - justify-self: start
      entities:
        - text-align: start
        - height: 290px

zones_grid:
  template: grid_style
  styles:
    grid:
      - grid-template-areas: '"header header" "zones zones" "commandbar commandbar"'
      - grid-template-columns: 1fr 1fr
      - grid-auto-rows: auto
      - row-gap: 3px
      - column-gap: 10px
      - margin-left: 10px
      - margin-right: 10px
    custom_fields:
      header:
        - margin-bottom: 2px
        - margin-left: -10px
        - height: 46px
      zones:
        - height: 307px

panel_grid:
  template: grid_style
  styles:
    card:
      - background: none
      - padding-top: 15px
    grid:
      - grid-template-areas: '"header" "content" "commandbar"'
      - grid-template-columns: 1fr
      - grid-auto-rows: auto
      - row-gap: 3px
      - column-gap: 10px
      - margin-left: 10px
      - margin-right: 10px
    custom_fields:
      header:
        - margin-bottom: 2px
        - margin-left: -10px
        - height: 46px
      content:
        - max-height: 300px
        - margin-top: 5px

# TODO: Check if can be changed
zone_table:
  template: grid_style
  styles:
    grid:
      - grid-template-areas: '"header header header" "warning warning warning" "list1  list2 ." "commandbar commandbar commandbar"'
      - grid-template-columns: auto
      - grid-template-rows: 1fr 80px 192px min-content
      - align-items: start
      - row-gap: 5px
    custom_fields:
      warning:
        - justify-self: stretch
        - text-align-last: start
      list1:
        - margin-left: 40px

# TODO: Check if can be changed
zone_name:
  styles:
    card:
      - background: none
      - padding: 3px
      - margin-left: 5px
      - width: 250px
  tap_action:
    action: none

# TODO: Check if can be changed
graph:
  styles:
    custom_fields:
      graph:
        - overflow: unset
    card:
      - overflow: unset
      - padding-top: 0px
    grid:
      - grid-template-areas: '"n" "graph"'
      - grid-template-columns: 1fr
      - grid-template-rows: auto auto

settings_card:
  template: button_hold
  styles:
    card:
      - width: 165px
      - height: 115px
      - box-shadow: 1px 5px 8px rgba(0, 0, 0, 0.3)
      - margin: 5px

command_bar:
  styles:
    grid:
      - grid-template-areas: '"commands"'
    card:
      - margin-top: 0.5px
      - margin-bottom: 0px
      - box-shadow: 1px -1px 8px rgba(0, 0, 0, 0.3)
      - background: "#333333"
      - text-color: white
      - position: fixed
      - bottom: 0px
      - z-index: 100
    custom_fields:
      commands:
        - margin-top: 3px
        - height: 60px

# TODO: Check if can be changed
new_heating_program_ctrl:
  styles:
    card:
      - padding: 0%
    grid:
      - grid-template-areas: '"days time"'
      - grid-template-columns: 1fr 1fr
      - height: 170px
    custom_fields:
      days:
        - display: flex
        - justify-content: space-evenly
        - box-shadow: none
        - margin-bottom: 32px
      time:
        - box-shadow: none
        - padding: 10px
  custom_fields:
    days:
      card:
        type: "custom:button-card"
        template: heating_week
        variables:
          progId: "[[[return variables.progId;]]]"
    time:
      card:
        type: "custom:button-card"
        template: heating_time_picker
        variables:
          progId: "[[[return variables.progId;]]]"

heating_program_label:
  layout: icon_name
  icon: "mdi:power"
  size: 65%
  state:
    - value: "off"
      color: black
    - value: "on"
      color: "#DCA200"
  styles:
    card:
      - box-shadow: none

heating_program_layout:
  template: grid_style
  card_mod:
    style: |
      #content::-webkit-scrollbar {
        display: none !important;
      }
  styles:
    card:
      - background: none
      - padding-top: 15px
      - padding-bottom: 0px
    grid:
      - grid-template-areas: |
          "header"
          "content"
          "commandbar"
      - grid-template-columns: 1fr
      - grid-auto-rows: auto
      - row-gap: 3px
      - column-gap: 10px
      - margin-left: 10px
      - margin-right: 10px
    custom_fields:
      header:
        - margin-bottom: 2px
        - margin-left: -10px
        - height: 46px
      content:
        - height: 300px
        - margin-top: 5px
        - overflow: auto
  custom_fields:
    header:
      card:
        type: "custom:button-card"
        entity: "[[[return `input_boolean.heater_program${variables.progId}`]]]"
        template:
          - header_page_text
          - icon_clima
        name: "[[[return `PROGRAMMA ${variables.progId}`]]]"
        label: "[[[return `Clima / Programma ${variables.progId}`]]]"
    commandbar:
      card:
        type: "custom:button-card"
        template: heating_command_bar
        variables:
          progId: "[[[return variables.progId]]]"
    content:
      card:
        type: "custom:button-card"
        template: heating_program_content
        variables:
          progId: "[[[return variables.progId]]]"
        styles:
          card:
            - padding: 0px

heating_program_content:
  template: grid_style
  styles:
    card:
      - background: none
      - padding-top: 15px
      - padding-bottom: 0px
    grid:
      - grid-template-areas: |
          "program"
          "content"
      - grid-template-columns: 1fr
      - row-gap: 10px
  custom_fields:
    program:
      card:
        type: "custom:button-card"
        template: new_heating_program_ctrl
        variables:
          progId: "[[[return variables.progId]]]"
    content:
      card:
        type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: heating_expander_nightzone
            variables:
              progId: "[[[return variables.progId]]]"
          - type: "custom:button-card"
            template: heating_expander_dayzone
            variables:
              progId: "[[[return variables.progId]]]"

heating_program_day:
  state:
    - value: "on"
      styles:
        card:
          - border-color: var(--command-state-active-color)
  styles:
    card:
      - border-color: var(--paper-item-icon-color)
      - border-style: double
      - border-width: 2px
      - height: 30px
      - width: 60px

heating_week:
  styles:
    grid:
      - grid-template-areas: '"days"'
    card:
      - box-shadow: none
  custom_fields:
    days:
      card:
        type: vertical-stack
        cards:
          - type: "custom:button-card"
            template: no_background
            name: "Giorni"
            styles:
              card:
                - padding-top: 0px
              name:
                - margin: 0px auto
                - font-size: large
          - type: grid
            columns: 4
            square: false
            cards:
              - type: custom:button-card
                template: heating_program_day
                entity: "[[[return `input_boolean.thermostat_monday_program${variables.progId}`]]]"
                name: LUN
              - type: custom:button-card
                template: heating_program_day
                entity: "[[[return `input_boolean.thermostat_tuesday_program${variables.progId}`]]]"
                name: MAR
              - type: custom:button-card
                template: heating_program_day
                entity: "[[[return `input_boolean.thermostat_wednesday_program${variables.progId}`]]]"
                name: MER
              - type: custom:button-card
                template: heating_program_day
                entity: "[[[return `input_boolean.thermostat_thursday_program${variables.progId}`]]]"
                name: GIO
              - type: custom:button-card
                template: heating_program_day
                entity: "[[[return `input_boolean.thermostat_friday_program${variables.progId}`]]]"
                name: VEN
              - type: custom:button-card
                template: heating_program_day
                entity: "[[[return `input_boolean.thermostat_saturday_program${variables.progId}`]]]"
                name: SAB
              - type: custom:button-card
                template: heating_program_day
                entity: "[[[return `input_boolean.thermostat_sunday_program${variables.progId}`]]]"
                name: DOM
              - type: "custom:button-card"
                template: heating_program_label
                entity: "[[[return `group.program${variables.progId}_days`]]]"
                layout: icon_name
                name: "Tutti"
                size: 100%
                show_label: false
                show_name: true
                styles:
                  card:
                    - height: 30px
                    - width: 60px

heating_time_picker:
  styles:
    grid:
      - grid-template-areas: '"time"'
    card:
      - box-shadow: none
  custom_fields:
    time:
      card:
        type: horizontal-stack
        cards:
          - entity: "[[[return `input_datetime.thermostat_on_period${variables.progId}`]]]"
            <<: &timepicker_style
              type: custom:time-picker-card
              minute_step: 5
              layout:
                embedded: true
                align_controls: right
              style: |
                state-badge {
                  display: none;
                }
                .time-picker-row.embedded {
                  flex-direction: column;
                }
          - entity: "[[[return `input_datetime.thermostat_off_period${variables.progId}`]]]"
            <<: *timepicker_style

heating_command_bar:
  type: "custom:button-card"
  template: command_bar
  style: |
    ha-card.button-card-main {
      padding: 0px !important
    }
  styles:
    card:
      - margin-left: -10px
  custom_fields:
    commands:
      card:
        type: horizontal-stack
        cards:
          - type: "custom:button-card"
            template:
              - icon_state_header
              - heating_program_ctrl
            entity: "[[[return `input_boolean.heater_program${variables.progId}`]]]"
          - type: "custom:button-card"
            template:
              - header_button_menu
              - temperature_ctrl_minus
            styles:
              card:
                - left: 60px
                - bottom: -5px
            variables:
              entity: "[[[return `input_number.temperature_period${variables.progId}`]]]"
          - type: "custom:button-card"
            entity: "[[[return `input_number.temperature_period${variables.progId}`]]]"
            template:
              - no_background
              - temperature_value
          - type: "custom:button-card"
            template:
              - header_button_menu
              - temperature_ctrl_plus
            styles:
              card:
                - left: -60px
                - bottom: -5px
            variables:
              entity: "[[[return `input_number.temperature_period${variables.progId}`]]]"
          - type: "custom:button-card"
            template: button_go_back

expander_template:
  styles:
    grid:
      - grid-template-areas: '"expander"'
    card:
      - padding: 0px

heating_expander_nightzone:
  template: expander_template
  custom_fields:
    expander:
      card:
        type: "custom:expander-card"
        padding: 10px
        gap: 0px
        title-card:
          type: "custom:button-card"
          template: heating_expander_zone
          variables:
            progId: "[[[return variables.progId]]]"
            zone: zn100
        cards:
          - <<: &divider
              type: entities
              card_mod:
                style: |
                  div.card-content {
                    padding: 0px;
                  }
              entities:
                - type: divider
                  style:
                    background-color: "#000000"
                    height: 4px
          - <<: &mod-card-room
              type: custom:mod-card
              card_mod:
                style:
                  hui-grid-card$: |
                    div#root {
                      background: var(--primary-background-color);
                    }
            card:
              type: grid
              columns: 2
              square: false
              cards:
                - type: "custom:button-card"
                  template: heating_expander_room
                  variables:
                    progId: "[[[return variables.progId]]]"
                    zone: zn101
                - type: "custom:button-card"
                  template: heating_expander_room
                  variables:
                    progId: "[[[return variables.progId]]]"
                    zone: zn102
                - type: "custom:button-card"
                  template: heating_expander_room
                  variables:
                    progId: "[[[return variables.progId]]]"
                    zone: zn103
                - type: "custom:button-card"
                  template: heating_expander_room
                  variables:
                    progId: "[[[return variables.progId]]]"
                    zone: zn104

heating_expander_dayzone:
  template: expander_template
  custom_fields:
    expander:
      card:
        type: "custom:expander-card"
        padding: 11px
        gap: 0px
        title-card:
          type: "custom:button-card"
          template: heating_expander_zone
          variables:
            progId: "[[[return variables.progId]]]"
            zone: zn200
        cards:
          - <<: *divider
          - <<: *mod-card-room
            card:
              type: grid
              columns: 2
              square: false
              cards:
                - type: "custom:button-card"
                  template: heating_expander_room
                  variables:
                    progId: "[[[return variables.progId]]]"
                    zone: zn201
                - type: "custom:button-card"
                  template: heating_expander_room
                  variables:
                    progId: "[[[return variables.progId]]]"
                    zone: zn202
                - type: "custom:button-card"
                  template: heating_expander_room
                  variables:
                    progId: "[[[return variables.progId]]]"
                    zone: zn203

heating_expander_zone:
  styles:
    grid:
      - grid-template-areas: '"label temp"'
      - background: none
      - display: flex
      - justify-content: space-between
    card:
      - padding: 0px
      - box-shadow: none
    custom_fields:
      temp:
        - width: 200px
  custom_fields:
    label:
      card:
        type: "custom:button-card"
        template: heating_program_label
        size: 45%
        entity: "[[[return `group.heater_${variables.zone}_program${variables.progId}`]]]"
        name: "[[[return states[`input_text.${variables.zone}`].state;]]]"
    temp:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            template: temperature_ctrl_minus
            icon: mdi:minus
            size: 40%
            variables:
              entity: "[[[return `input_number.temperature_${variables.zone}_period${variables.progId}`]]]"
          - type: "custom:button-card"
            entity: "[[[return `input_number.temperature_${variables.zone}_period${variables.progId}`]]]"
            template: temperature_value
          - type: custom:button-card
            template: temperature_ctrl_plus
            icon: mdi:plus
            size: 40%
            variables:
              entity: "[[[return `input_number.temperature_${variables.zone}_period${variables.progId}`]]]"

heating_expander_room:
  styles:
    grid:
      - grid-template-areas: '"label temp"'
      - background: none
    card:
      - box-shadow: none
      - background: var(--primary-background-color)
    custom_fields:
      temp:
        - width: 160px
  custom_fields:
    label:
      card:
        type: "custom:button-card"
        template:
          - heating_program_label
          - grey_background
        entity: "[[[return `input_boolean.heater_${variables.zone}_program${variables.progId}`]]]"
        name: "[[[return states[`input_text.${variables.zone}`].state;]]]"
        size: 55%
    temp:
      card:
        type: custom:mod-card
        card_mod:
          style:
            hui-horizontal-stack-card:
              $: |
                #root > * {
                  margin: 0px !important;
                }
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              template:
                - temperature_ctrl_minus
                - width_50
              icon: mdi:minus
              size: 50%
              variables:
                entity: "[[[return `input_number.temperature_${variables.zone}_period${variables.progId}`]]]"
            - type: "custom:button-card"
              template:
                - temperature_value
                - grey_background
              entity: "[[[return `input_number.temperature_${variables.zone}_period${variables.progId}`]]]"
            - type: custom:button-card
              template:
                - temperature_ctrl_plus
                - width_50
              icon: mdi:plus
              size: 50%
              variables:
                entity: "[[[return `input_number.temperature_${variables.zone}_period${variables.progId}`]]]"
