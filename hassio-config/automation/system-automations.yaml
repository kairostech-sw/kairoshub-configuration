- alias: Hassio start routine
  trigger:
    - event: start
      platform: homeassistant
  action:
    - delay: 00:00:15
    - event: HA_SET_CONSUMER_TOPIC
    - delay: 00:00:15
    - event: HA_STARTUP_COMPLETE
    - delay: 00:00:30
    - event: AD_KAIROSHUB_STARTED
- alias: KAFKA CONSUMER SET
  trigger:
    - platform: state
      entity_id: input_text.system_code
      for: "00:15:00"
    - platform: event
      event_type: HA_SET_CONSUMER_TOPIC
  action:
    - service: mqtt.publish
      data_template:
        topic: "kairostech/command"
        payload: "SET_CONSUMER_TOPIC_{{ states('input_text.system_code') }}"
- alias: SYSTEM METRICS
  trigger:
    platform: time_pattern
    minutes: "/30"
  action:
    - event: AD_SYSTEM_METRICS
- alias: ENTITY METRICS
  trigger:
    - platform: time_pattern
      minutes: /15
    - platform: event
      event_type: HA_ENTITY_METRICS
  action:
    event: "AD_ENTITY_METRICS"
- alias: Hassio shutdown routine
  trigger:
    event: shutdown
    platform: homeassistant
  action:
    - event: HA_SHUTDOWN_REQUEST
- alias: Richiesta assistenza
  trigger:
    - platform: state
      entity_id: input_boolean.assistance_request
      from: "off"
      to: "on"
      for: "00:00:10"
    - platform: event
      event_type: HA_ASSSISTANCE_ON
  action:
    - service: mqtt.publish
      data_template:
        topic: "kairostech/command"
        payload: "ASSISTANCE_START"
- alias: Richiesta assistenza FINE
  trigger:
    - platform: state
      entity_id: input_boolean.assistance_request
      from: "on"
      to: "off"
      for: "00:00:10"
    - platform: event
      event_type: HA_ASSSISTANCE_OFF
  action:
    - service: mqtt.publish
      data_template:
        topic: "kairostech/command"
        payload: "ASSISTANCE_STOP"
- alias: OTA UPDATE CHECK
  trigger:
    - platform: time_pattern
      hours: "/23"
  action:
    - service: mqtt.publish
      data_template:
        topic: "kairostech/command"
        payload: "KAIROSHUB_RELEASE_CHECK"
# rimossa perche causa non aggiornamento delle settings da parte del cloud attraverso il comando RESTORE
# problema: settings sync start 00:00, prende settings fs e aggiorna lifetime +1d.
# restore start 03:00 | (every reboot), controlla lifetime ma sarÃ  sempre valido
# - alias: SYNC SETTINGS
#   trigger:
#     - platform: time
#       at: "00:00:00"
#   action:
#     event: "AD_SETTINGS_SYNC"
- alias: RESTORE SETTINGS
  trigger:
  action:
    event: "AD_SETTINGS_RESTORE"
- alias: SYNC NOTIFICATION MESSAGES
  trigger:
    - platform: time
      at: "00:00:00"
  action:
    event: "AD_NOTIFICATION_SYNC"
- alias: SYSTEM EXCHANGE CHECK
  trigger:
    - platform: time_pattern
      minutes: "/20"
  action:
    - service: mqtt.publish
      data_template:
        topic: "kairostech/command"
        payload: "KAIROSHUB_SYSTEM_EXCHANGE_CHECK"
    - delay: "00:00:30"
    # - condition:
    - alias: "checking last update timestamp of a sensor"
      condition: template
      value_template: "{{ (as_timestamp(now())-states.sensor.system_exchange_services_last_check.state|float()) > 2400 }}"
    - service: mqtt.publish
      data_template:
        topic: "kairostech/system/exchange_service"
        payload: "OFFLINE"
        retain: true

- alias: HEATING INTEGRATION
  trigger:
    - platform: state
      entity_id: input_boolean.heating_integration
  action:
    service: >
      automation.turn_{{trigger.to_state.state}}
    target:
      entity_id:
        - automation.heating_program_1
        - automation.heating_program_2
        - automation.heating_program_3
        - automation.heating_program_4
        - automation.manual_heating
        - automation.comfort_temp_reached
        - automation.low_tv_battery_notification
        - automation.low_th_battery_notification
        - automation.copy_program_timers
        - automation.calibrate_trvs
- alias: ROLLER INTEGRATION
  trigger:
    - platform: state
      entity_id: input_boolean.roller_integration
  action:
    service: >
      automation.turn_{{trigger.to_state.state}}
    target:
      entity_id:
        - automation.open_rollers
        - automation.close_rollers
        - automation.control_rollers
        - automation.calibrate_rollers
- alias: LIGHT INTEGRATION
  trigger:
    - platform: state
      entity_id: input_boolean.light_integration
  action:
    service: >
      automation.turn_{{trigger.to_state.state}}
    target:
      entity_id:
        - automation.light_toggle
        - automation.light_zone_toggle
        - automation.copy_light_settings
        - automation.nightzone_program_1
        - automation.dayzone_program_1
        - automation.outdoor_program_1
        - automation.nightzone_sunset_turn_off
        - automation.dayzone_sunset_turn_off
        - automation.outdoor_sunset_turn_off
# - alias: DOOR INTEGRATION
#   trigger:
#     - platform: state
#       entity_id: input_boolean.door_integration
#   action:
#     service: >
#       automation.turn_{{trigger.to_state.state}}
#     target:
#       entity_id:
#         - automation.
# - alias: SOLAR INTEGRATION
#   trigger:
#     - platform: state
#       entity_id: input_boolean.solar_integration
#   action:
#     service: >
#       automation.turn_{{trigger.to_state.state}}
#     target:
#       entity_id:
#         - automation.
# - alias: SECURITY INTEGRATION
#   trigger:
#     - platform: state
#       entity_id: input_boolean.security_integration
#   action:
#     service: >
#       automation.turn_{{trigger.to_state.state}}
#     target:
#       entity_id:
#         - automation.
- alias: ALEXA INTEGRATION START
  trigger:
  action:
    event: AD_INTEGRATION_ALEXA_REGISTRATION_REQUEST
- alias: ALEXA INTEGRATION RENEW TOGGLE
  trigger:
  action:
    event: AD_INTEGRATION_ALEXA_SUBSCRIPTION_RENEW_TOGGLE_REQ
