- alias: HOME TO_OFF
  trigger:
    - platform: state
      entity_id: input_boolean.at_home
      from: "on"
      to: "off"
      for: "00:00:05"
  action:
    - event: HA_ROLLERS_NOTATHOME_POSITION
    - event: HA_MANAGE_HOME_ON_OFF
      event_data:
        state: "{{ trigger.to_state.state }}"

- alias: HOME TO_ON
  trigger:
    - platform: state
      entity_id: input_boolean.at_home
      from: "off"
      to: "on"
  action:
    - event: HA_ROLLERS_ATHOME_POSITION
    - event: HA_MANAGE_HOME_ON_OFF
      event_data:
        state: "{{ trigger.to_state.state }}"

- alias: AUTOMATION_H07
  trigger:
    - platform: time
      at: "07:00:00"
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.night
    - delay: 0:10
    - event: HA_MANAGE_NIGHT_ON_OFF
      event_data:
        state: "{{states('input_boolean.night')}}"
    - event: AD_KAIROSHUB_STARTED

- alias: AUTOMATION_H20
  trigger:
    - platform: time
      at: "20:00:00"
  action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.night
    - delay: 0:10
    - event: HA_MANAGE_NIGHT_ON_OFF
      event_data:
        state: "{{states('input_boolean.night')}}"
    - event: AD_KAIROSHUB_STARTED

- alias: Scenario Giorno Notte Manuale
  trigger:
  action:
    - service: input_boolean.toggle
      target:
        entity_id: input_boolean.night
    - event: AD_SCENES_DAY_NIGHT
      event_data:
        state: "{{ states('input_boolean.night') }}"
        mode: Manuale
        sender: HUB

- alias: Scenario Notte Programmato
  trigger:
    - platform: time
      at: input_datetime.scene_day_off
  condition:
    - condition: state
      state: Programmato
      entity_id: input_select.scene_day
  action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.night
    - event: AD_SCENES_DAY_NIGHT
      event_data:
        state: "{{ states('input_boolean.night') }}"
        mode: Programmato
        sender: HUB

- alias: Scenario Giorno Programmato
  trigger:
    - platform: time
      at: input_datetime.scene_day_on
  condition:
    - condition: state
      state: Programmato
      entity_id: input_select.scene_day
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.night
    - event: AD_SCENES_DAY_NIGHT
      event_data:
        state: "{{ states('input_boolean.night') }}"
        mode: Programmato
        sender: HUB

- alias: Scenario Notte Automatico
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      below: -4.0
  condition:
    - condition: state
      state: Automatico
      entity_id: input_select.scene_day
  action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.night
    - event: AD_SCENES_DAY_NIGHT
      event_data:
        state: "{{ states('input_boolean.night') }}"
        mode: Automatico
        sender: HUB

- alias: Scenario Giorno Automatico
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      above: 0.0
  condition:
    - condition: state
      state: Automatico
      entity_id: input_select.scene_day
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.night
    - event: AD_SCENES_DAY_NIGHT
      event_data:
        state: "{{ states('input_boolean.night') }}"
        mode: Automatico
        sender: HUB

- alias: HT UPDATE STATE
  trigger:
    - platform: state
      to: active
      entity_id: 
        - sensor.TH1001
        - sensor.TH1011
        - sensor.TH1021
        - sensor.TH1031
        - sensor.TH1041
        - sensor.TH2001
        - sensor.TH2011
        - sensor.TH2021
        - sensor.TH2031
  action:
    - event: AD_SHELLY_UPDATE
      event_data:
        entity: "{{trigger.entity_id}}"
    - delay: "00:00:05"
    - event: AD_SHELLY_ASLEEP
      event_data:
        entity: "{{trigger.entity_id}}"

- alias: SHELLY SIGNAL CHECK
  trigger:
    - platform: time_pattern
      hours: "/1"
  action:
    event: AD_SHELLY_SIGNAL_CHECK

